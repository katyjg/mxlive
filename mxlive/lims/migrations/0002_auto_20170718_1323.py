# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-07-18 19:23
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('lims', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContainerLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='ContainerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('kind', models.IntegerField(choices=[(0, b'Cassette'), (1, b'Uni-Puck'), (2, b'Cane'), (3, b'Basket')], verbose_name=b'type')),
                ('layout', jsonfield.fields.JSONField()),
                ('envelope', models.CharField(max_length=200)),
                ('container_locations', models.ManyToManyField(to='lims.ContainerLocation')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('comments', models.TextField()),
                ('beamline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Beamline')),
            ],
        ),
        migrations.AlterModelManagers(
            name='project',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='activitylog',
            name='project',
        ),
        migrations.RemoveField(
            model_name='project',
            name='user',
        ),
        migrations.AddField(
            model_name='container',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Shipment'),
        ),
        migrations.AddField(
            model_name='project',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='project',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='project',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='project',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='project',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='project',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='project',
            name='password',
            field=models.CharField(default='Welcome1', max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='project',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='project',
            name='username',
            field=models.CharField(default='test', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='shipment',
            name='storage_location',
            field=models.CharField(blank=True, max_length=60, null=True),
        ),
        migrations.AlterField(
            model_name='activitylog',
            name='action_type',
            field=models.IntegerField(choices=[(0, b'Login'), (1, b'Logout'), (2, b'Task'), (3, b'Create'), (4, b'Modify'), (5, b'Delete'), (6, b'Archive')]),
        ),
        migrations.AlterField(
            model_name='component',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='container',
            name='kind',
            field=models.IntegerField(choices=[(0, b'Cassette'), (1, b'Uni-Puck'), (2, b'Cane'), (3, b'Basket')], verbose_name=b'type'),
        ),
        migrations.AlterField(
            model_name='container',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (3, 'Loaded'), (4, 'Returned'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='crystal',
            name='collect_status',
            field=models.IntegerField(choices=[(0, b'Not Required'), (1, b'Pending'), (2, b'Completed'), (3, b'Ignore')], default=0),
        ),
        migrations.AlterField(
            model_name='crystal',
            name='pin_length',
            field=models.IntegerField(default=18),
        ),
        migrations.AlterField(
            model_name='crystal',
            name='screen_status',
            field=models.IntegerField(choices=[(0, b'Not Required'), (1, b'Pending'), (2, b'Completed'), (3, b'Ignore')], default=0),
        ),
        migrations.AlterField(
            model_name='crystal',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (3, 'Loaded'), (4, 'Returned'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='data',
            name='kind',
            field=models.IntegerField(choices=[(0, b'Screening'), (1, b'Collection')], default=0, verbose_name=b'Data type'),
        ),
        migrations.AlterField(
            model_name='data',
            name='status',
            field=models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5),
        ),
        migrations.AlterField(
            model_name='dewar',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='kind',
            field=models.IntegerField(choices=[(0, b'Native'), (1, b'MAD'), (2, b'SAD')], default=0, verbose_name=b'exp. type'),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='plan',
            field=models.IntegerField(choices=[(0, b'Rank and collect best'), (1, b'Collect first good'), (2, b'Screen and confirm'), (3, b'Screen and collect'), (4, b'Just collect')], default=2),
        ),
        migrations.AlterField(
            model_name='experiment',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (5, 'Active'), (6, 'Processing'), (7, 'Complete'), (8, 'Reviewed'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='feedback',
            name='category',
            field=models.IntegerField(choices=[(0, b'Remote Control'), (1, b'MxLIVE Website'), (2, b'Other')], verbose_name=b'Category'),
        ),
        migrations.AlterField(
            model_name='result',
            name='kind',
            field=models.IntegerField(choices=[(0, b'Screening'), (1, b'Collection')], verbose_name=b'Result type'),
        ),
        migrations.AlterField(
            model_name='result',
            name='status',
            field=models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5),
        ),
        migrations.AlterField(
            model_name='scanresult',
            name='kind',
            field=models.IntegerField(choices=[(0, b'MAD Scan'), (1, b'Excitation Scan')], verbose_name=b'Scan type'),
        ),
        migrations.AlterField(
            model_name='scanresult',
            name='status',
            field=models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5),
        ),
        migrations.AlterField(
            model_name='shipment',
            name='status',
            field=models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='status',
            field=models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5),
        ),
        migrations.AddField(
            model_name='session',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='containerlocation',
            name='accepts',
            field=models.ManyToManyField(related_name='locations', to='lims.ContainerType'),
        ),
    ]
