# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-07-14 17:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'Date/Time')),
                ('user_description', models.CharField(blank=True, max_length=60, null=True, verbose_name=b'User name')),
                ('ip_number', models.GenericIPAddressField(verbose_name=b'IP Address')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action_type', models.IntegerField(choices=[(0, b'Login'), (1, b'Logout'), (2, b'Task'), (3, b'Create'), (4, b'Modify'), (5, b'Delete'), (6, b'Archive')], max_length=1)),
                ('object_repr', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Entity')),
                ('description', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Beamline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=600)),
                ('energy_lo', models.FloatField(default=4.0)),
                ('energy_hi', models.FloatField(default=18.5)),
                ('contact_phone', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('phone_number', models.CharField(max_length=20)),
                ('fax_number', models.CharField(max_length=20)),
                ('code_regex', models.CharField(max_length=60)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Cocktail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('is_radioactive', models.BooleanField(default=False)),
                ('contains_heavy_metals', models.BooleanField(default=False)),
                ('contains_prions', models.BooleanField(default=False)),
                ('contains_viruses', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name', '-created'],
                'verbose_name': 'Protein Cocktail',
                'verbose_name_plural': 'Protein Cocktails',
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0, max_length=1)),
                ('description', models.CharField(max_length=100)),
                ('label', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (3, 'Loaded'), (4, 'Returned'), (9, 'Archived')], default=0, max_length=1)),
                ('kind', models.IntegerField(choices=[(0, b'Cassette'), (1, b'Uni-Puck'), (2, b'Cane'), (3, b'Basket')], max_length=1, verbose_name=b'type')),
                ('comments', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('staff_priority', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Crystal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (3, 'Loaded'), (4, 'Returned'), (9, 'Archived')], default=0, max_length=1)),
                ('barcode', models.SlugField(blank=True, null=True)),
                ('pin_length', models.IntegerField(default=18, max_length=2)),
                ('loop_size', models.FloatField(blank=True, null=True)),
                ('container_location', models.CharField(blank=True, max_length=10, null=True, verbose_name=b'port')),
                ('comments', models.TextField(blank=True, null=True)),
                ('collect_status', models.IntegerField(choices=[(0, b'Not Required'), (1, b'Pending'), (2, b'Completed'), (3, b'Ignore')], default=0, max_length=1)),
                ('screen_status', models.IntegerField(choices=[(0, b'Not Required'), (1, b'Pending'), (2, b'Completed'), (3, b'Ignore')], default=0, max_length=1)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('staff_priority', models.IntegerField(blank=True, null=True)),
                ('cocktail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Cocktail')),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Container')),
            ],
            options={
                'ordering': ['priority', 'container', 'container_location'],
            },
        ),
        migrations.CreateModel(
            name='CrystalForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('cell_a', models.FloatField(blank=True, null=True, verbose_name=b' a')),
                ('cell_b', models.FloatField(blank=True, null=True, verbose_name=b' b')),
                ('cell_c', models.FloatField(blank=True, null=True, verbose_name=b' c')),
                ('cell_alpha', models.FloatField(blank=True, null=True, verbose_name=b' alpha')),
                ('cell_beta', models.FloatField(blank=True, null=True, verbose_name=b' beta')),
                ('cell_gamma', models.FloatField(blank=True, null=True, verbose_name=b' gamma')),
            ],
            options={
                'ordering': ['name', '-created'],
                'verbose_name': 'Crystal Form',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5, max_length=1)),
                ('resolution', models.FloatField()),
                ('start_angle', models.FloatField()),
                ('delta_angle', models.FloatField()),
                ('first_frame', models.IntegerField(default=1)),
                ('frame_sets', models.CharField(max_length=200)),
                ('exposure_time', models.FloatField()),
                ('two_theta', models.FloatField()),
                ('wavelength', models.FloatField()),
                ('detector', models.CharField(max_length=20)),
                ('detector_size', models.IntegerField()),
                ('pixel_size', models.FloatField()),
                ('beam_x', models.FloatField()),
                ('beam_y', models.FloatField()),
                ('url', models.CharField(max_length=200)),
                ('kind', models.IntegerField(choices=[(0, b'Screening'), (1, b'Collection')], default=0, max_length=1, verbose_name=b'Data type')),
                ('download', models.BooleanField(default=False)),
                ('beamline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Beamline')),
                ('crystal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Crystal')),
            ],
            options={
                'verbose_name': 'Dataset',
            },
        ),
        migrations.CreateModel(
            name='Dewar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0, max_length=1)),
                ('comments', models.TextField(blank=True, help_text=b'Use this field to jot notes related to this shipment for your own use', null=True)),
                ('storage_location', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (5, 'Active'), (6, 'Processing'), (7, 'Complete'), (8, 'Reviewed'), (9, 'Archived')], default=0, max_length=1)),
                ('resolution', models.FloatField(blank=True, null=True, verbose_name=b'Desired Resolution')),
                ('delta_angle', models.FloatField(blank=True, null=True)),
                ('i_sigma', models.FloatField(blank=True, null=True, verbose_name=b'Desired I/Sigma')),
                ('r_meas', models.FloatField(blank=True, null=True, verbose_name=b'Desired R-factor')),
                ('multiplicity', models.FloatField(blank=True, null=True)),
                ('total_angle', models.FloatField(blank=True, null=True, verbose_name=b'Desired Angle Range')),
                ('energy', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('kind', models.IntegerField(choices=[(0, b'Native'), (1, b'MAD'), (2, b'SAD')], default=0, max_length=1, verbose_name=b'exp. type')),
                ('absorption_edge', models.CharField(blank=True, max_length=5, null=True)),
                ('plan', models.IntegerField(choices=[(0, b'Rank and collect best'), (1, b'Collect first good'), (2, b'Screen and confirm'), (3, b'Screen and collect'), (4, b'Just collect')], default=2, max_length=1)),
                ('comments', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('staff_priority', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Experiment request',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(0, b'Remote Control'), (1, b'MxLIVE Website'), (2, b'Other')], max_length=1, verbose_name=b'Category')),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.EmailField(blank=True, max_length=100, null=True)),
                ('message', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
            ],
            options={
                'verbose_name': 'Feedback comment',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(verbose_name=b'account name')),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=600, null=True)),
                ('address', models.CharField(blank=True, max_length=600, null=True)),
                ('city', models.CharField(blank=True, max_length=180, null=True)),
                ('province', models.CharField(blank=True, max_length=180, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=180, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=60, null=True)),
                ('contact_fax', models.CharField(blank=True, max_length=60, null=True)),
                ('organisation', models.CharField(blank=True, max_length=600, null=True)),
                ('show_archives', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('updated', models.BooleanField(default=False)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Carrier')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project Account',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5, max_length=1)),
                ('score', models.FloatField()),
                ('cell_a', models.FloatField(verbose_name=b'a')),
                ('cell_b', models.FloatField(verbose_name=b'b')),
                ('cell_c', models.FloatField(verbose_name=b'c')),
                ('cell_alpha', models.FloatField(verbose_name=b'alpha')),
                ('cell_beta', models.FloatField(verbose_name=b'beta')),
                ('cell_gamma', models.FloatField(verbose_name=b'gamma')),
                ('resolution', models.FloatField()),
                ('reflections', models.IntegerField()),
                ('unique', models.IntegerField()),
                ('multiplicity', models.FloatField()),
                ('completeness', models.FloatField()),
                ('mosaicity', models.FloatField()),
                ('wavelength', models.FloatField(blank=True, null=True)),
                ('i_sigma', models.FloatField(verbose_name=b'I/Sigma')),
                ('r_meas', models.FloatField(verbose_name=b'R-meas')),
                ('r_mrgdf', models.FloatField(blank=True, null=True, verbose_name=b'R-mrgd-F')),
                ('cc_half', models.FloatField(blank=True, null=True, verbose_name=b'CC-1/2')),
                ('sigma_spot', models.FloatField(verbose_name=b'Sigma(spot)')),
                ('sigma_angle', models.FloatField(verbose_name=b'Sigma(angle)')),
                ('ice_rings', models.IntegerField()),
                ('url', models.CharField(max_length=200)),
                ('kind', models.IntegerField(choices=[(0, b'Screening'), (1, b'Collection')], max_length=1, verbose_name=b'Result type')),
                ('details', jsonfield.fields.JSONField()),
                ('crystal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Crystal')),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Data')),
                ('experiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Experiment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project')),
            ],
            options={
                'ordering': ['-score'],
                'verbose_name': 'Analysis Report',
            },
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5, max_length=1)),
                ('edge', models.CharField(max_length=20)),
                ('details', jsonfield.fields.JSONField()),
                ('kind', models.IntegerField(choices=[(0, b'MAD Scan'), (1, b'Excitation Scan')], max_length=1, verbose_name=b'Scan type')),
                ('energy', models.FloatField(blank=True, null=True)),
                ('exposure_time', models.FloatField(blank=True, null=True)),
                ('attenuation', models.FloatField(blank=True, null=True)),
                ('beamline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Beamline')),
                ('crystal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Crystal')),
                ('experiment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Experiment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Sent'), (2, 'On-site'), (4, 'Returned'), (9, 'Archived')], default=0, max_length=1)),
                ('comments', models.TextField(blank=True, max_length=200, null=True)),
                ('tracking_code', models.CharField(blank=True, max_length=60, null=True)),
                ('return_code', models.CharField(blank=True, max_length=60, null=True)),
                ('date_shipped', models.DateTimeField(blank=True, null=True)),
                ('date_received', models.DateTimeField(blank=True, null=True)),
                ('date_returned', models.DateTimeField(blank=True, null=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Carrier')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpaceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('crystal_system', models.CharField(choices=[(b'a', b'triclinic'), (b'm', b'monoclinic'), (b'o', b'orthorombic'), (b't', b'tetragonal'), (b'h', b'hexagonal'), (b'c', b'cubic')], max_length=1)),
                ('lattice_type', models.CharField(choices=[(b'P', b'primitive'), (b'C', b'side-centered'), (b'I', b'body-centered'), (b'F', b'face-centered'), (b'R', b'rhombohedral')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('staff_comments', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=b'date created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('status', models.IntegerField(choices=[(5, 'Active'), (9, 'Archived'), (10, 'Trashed')], default=5, max_length=1)),
                ('attenuation', models.FloatField()),
                ('distance', models.FloatField(default=200.0)),
                ('start_angle', models.FloatField(default=0.0)),
                ('delta_angle', models.FloatField(default=1.0)),
                ('total_angle', models.FloatField(default=180.0)),
                ('exposure_time', models.FloatField(default=1.0)),
                ('two_theta', models.FloatField(default=0.0)),
                ('energy', models.FloatField(default=12.658)),
                ('exp_resolution', models.FloatField(verbose_name=b'Expected Resolution')),
                ('exp_completeness', models.FloatField(verbose_name=b'Expected Completeness')),
                ('exp_multiplicity', models.FloatField(verbose_name=b'Expected Multiplicity')),
                ('exp_i_sigma', models.FloatField(verbose_name=b'Expected I/Sigma')),
                ('exp_r_factor', models.FloatField(verbose_name=b'Expected R-factor')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project')),
            ],
            options={
                'verbose_name_plural': 'Strategies',
            },
        ),
        migrations.AddField(
            model_name='result',
            name='space_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.SpaceGroup'),
        ),
        migrations.AddField(
            model_name='result',
            name='strategy',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Strategy'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='dewar',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='dewar',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Shipment'),
        ),
        migrations.AddField(
            model_name='data',
            name='experiment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Experiment'),
        ),
        migrations.AddField(
            model_name='data',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='crystalform',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='crystalform',
            name='space_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.SpaceGroup'),
        ),
        migrations.AddField(
            model_name='crystal',
            name='crystal_form',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.CrystalForm'),
        ),
        migrations.AddField(
            model_name='crystal',
            name='experiment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Experiment'),
        ),
        migrations.AddField(
            model_name='crystal',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='container',
            name='dewar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Dewar'),
        ),
        migrations.AddField(
            model_name='container',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='component',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='component',
            name='shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Shipment'),
        ),
        migrations.AddField(
            model_name='cocktail',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='activitylog',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lims.Project'),
        ),
        migrations.AddField(
            model_name='activitylog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='crystal',
            unique_together=set([('project', 'container', 'container_location')]),
        ),
    ]
