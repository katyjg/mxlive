import json

def merge_accounts(auth, proj):
    """
    Merges user and project data from past MxLIVE installations so the Project model can inherit from the AbstractUser class.
    :param auth: filename pointing to a json file generated by ./manage.py dumpdata auth.user
    :param proj: filename pointing to a json file generated by ./manage.py dumpdata lims.project
    :return: file named merged-accounts.json ready to be installed via ./manage.py loaddata
    """
    fa = open(auth)
    fp = open(proj)
    dauth = json.load(fa)
    dproj = json.load(fp)
    fa.close()
    fp.close()

    auth = {}
    for user in dauth:
        auth[user['fields']['username']] = user['fields']

    merged = []
    for project in dproj:
        project['fields'].update(auth[project['fields']['name']])
        del(project['fields']['user'])
        merged.append(project)

    fm = open('merged-accounts.json','w')
    fm.write(json.dumps(merged, indent=2))
    fm.close()

def cleanup(mxlive):
    """
    This
    :param mxlive: filename pointing to a json file generated by ./manage.py dumpdata
    :return: file named mxlive-clean.json ready to be installed via ./manage.py loaddata
    """
    fm = open(mxlive)
    data = json.load(fm)
    fm.close()

    dewars = {d['pk']: d for d in data if d['model'] == 'lims.dewar'}

    # Transfer dewar__storage_location to shipment__storage_location
    for i, shipment in enumerate([d for d in data if d['model'] == 'lims.shipment']):
        shipment_dewars = {k: v for k, v in  dewars.items() if v['fields']['shipment'] == shipment['pk']}
        data[i]['fields']['storage_location'] == dewars[]

    # Transfer container__dewar__shipment to container__shipment

    # Transfer container__kind to instance of ContainerType

    # Assign experiments to specific shipments
    """
    - Remove field project from cocktail
    - Remove field project from crystalform
    - Remove field space_group from crystalform
    - Remove field project from strategy
    - Remove field cocktail from crystal
    - Remove field crystal_form from crystal
    - Remove field delta_angle from experiment
    - Remove field i_sigma from experiment
    - Remove field multiplicity from experiment
    - Remove field r_meas from experiment
    - Remove field resolution from experiment
    - Remove field total_angle from experiment
    - Remove field strategy from result
    - Alter field sample_count on experiment
    - Delete model Cocktail
    - Delete model CrystalForm
    - Delete model Strategy
    - Rename model Experiment to Group
    - Rename model Crystal to Sample
    - Rename field experiment on data to group
    - Rename field crystal on data to sample
    - Rename field experiment on result to group
    - Rename field crystal on result to sample
    - Rename field experiment on sample to group
    - Rename field experiment on scanresult to group
    - Rename field crystal on scanresult to sample

    """

    data = [d for d in data if d['model'] not in ['lims.dewar','lims.strategy']]

    filename = open('mxlive-cleaned.json','w')
    filename.write(json.dumps(data, indent=2))
    filename.close()

